# Stalwart Mail Server - Tiny Profile Configuration
# For demos, Raspberry Pi, and quick technical tests
# Single instance, minimal PostgreSQL, perfect for testing

global:
  profile: "tiny"
  storageClass: "default"  # or "local-path" for local development

stalwart:
  replicaCount: 1  # Single instance for demos
  image:
    repository: stalwartlabs/mail-server  # Corrected repository name
    tag: "v0.11.8"  # Aligned with Chart.yaml appVersion
    pullPolicy: IfNotPresent
  
  # Recreate strategy for minimal resources
  strategy:
    type: Recreate
  
  # Minimal resources for Raspberry Pi / demo
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi
  
  persistence:
    enabled: true
    storageClass: ""  # Uses global.storageClass
    accessMode: ReadWriteOnce
    size: 2Gi
  
  # Configuration storage (minimal for demos)
  configPersistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 512Mi
  
  # No anti-affinity needed for single instance
  podAntiAffinity:
    enabled: false
    type: "preferredDuringSchedulingIgnoredDuringExecution"
    topologyKey: "kubernetes.io/hostname"
  
  # Basic security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  
  # Basic health checks (corrected paths)
  livenessProbe:
    httpGet:
      path: /admin
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    
  readinessProbe:
    httpGet:
      path: /admin
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  # Minimal configuration for demos
  config:
    jmap:
      maxObjectsInGet: 100
      maxObjectsInSet: 50
      pushEnabled: false
    
    smtp:
      maxMessageSize: 10485760  # 10MB
      maxRecipients: 10
      maxConnections: 5
      maxAuthAttempts: 3
    
    imap:
      maxConnections: 20
      idleTimeout: 600  # 10 minutes
      maxAuthAttempts: 3
    
    security:
      minTlsVersion: "TLSv1.2"
      preferServerCiphers: true
      authFailDelay: 1  # seconds

# Service configuration (moved to root level, NodePort for demos)
service:
  type: NodePort  # Use NodePort for local/demo environments
  externalTrafficPolicy: Local
  annotations:
    stalwart.io/demo-mode: "true"
  ports:
    webadmin:
      port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 30080  # Fixed NodePort for easy access
    webadmin_ssl:
      port: 443
      protocol: TCP
      targetPort: 443
      nodePort: 30443
    smtp:
      port: 25
      protocol: TCP
      targetPort: 25
      nodePort: 30025
    submission:
      port: 587
      protocol: TCP
      targetPort: 587
      nodePort: 30587
    smtps:
      port: 465
      protocol: TCP
      targetPort: 465
      nodePort: 30465
    imap:
      port: 143
      protocol: TCP
      targetPort: 143
      nodePort: 30143
    imaps:
      port: 993
      protocol: TCP
      targetPort: 993
      nodePort: 30993
    pop3:
      port: 110
      protocol: TCP
      targetPort: 110
      nodePort: 30110
    pop3s:
      port: 995
      protocol: TCP
      targetPort: 995
      nodePort: 30995
    sieve:
      port: 4190
      protocol: TCP
      targetPort: 4190
      nodePort: 31190

# PostgreSQL HA Configuration (minimal setup)
postgresql-ha:
  enabled: true
  
  postgresql:
    replicaCount: 1  # Single instance for tiny profile
    auth:
      enablePostgresUser: true
      postgresPassword: ""  # Auto-generated
      username: stalwart
      password: ""  # Auto-generated
      database: stalwart
    
    persistence:
      enabled: true
      storageClass: ""  # Uses global.storageClass
      size: 2Gi  # Minimal storage for demos
    
    # Minimal resources for demo/RPI
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 256Mi
    
    # Minimal PostgreSQL configuration
    postgresql:
      maxConnections: "50"
      sharedBuffers: "64MB"
      effectiveCacheSize: "128MB"
      maintenanceWorkMem: "16MB"
      checkpointCompletionTarget: "0.5"
      walBuffers: "2MB"
      defaultStatisticsTarget: "50"
      randomPageCost: "4.0"
      workMem: "1MB"
    
    # Basic security
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      runAsUser: 999
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
  
  # Pgpool disabled for single instance
  pgpool:
    replicaCount: 0

# Redis Configuration (disabled for tiny profile to save resources)
redis:
  enabled: false

# HPA disabled for single instance
autoscaling:
  enabled: false

# Pod Disruption Budget disabled for single replica
podDisruptionBudget:
  enabled: false

# Network Policies (disabled for demos)
networkPolicies:
  enabled: false

# RBAC (minimal)
rbac:
  create: true

# Service Account
serviceAccount:
  create: true
  annotations:
    stalwart.io/profile: "tiny"
    stalwart.io/demo-mode: "true"
  name: ""

# Monitoring (disabled for tiny profile)
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false

# Ingress (disabled for demos - use NodePort instead)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

# Security (basic for demos)
podSecurityContext:
  fsGroup: 65534

# Node affinity (not required for tiny profile)
nodeAffinity: {}

# Tolerations (allow scheduling on any node for demos)
tolerations:
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"

# Additional environment variables for demo mode
env:
  - name: STALWART_PROFILE
    value: "tiny"
  - name: RUST_LOG
    value: "debug"  # More verbose logging for demos
  - name: STALWART_DEMO_MODE
    value: "true"

# Demo-specific annotations (applied to all resources)
commonAnnotations:
  stalwart.io/profile: "tiny"
  stalwart.io/demo-mode: "true"
  stalwart.io/warning: "DEMO CONFIGURATION - NOT FOR PRODUCTION"
  stalwart.io/admin-password: "check-pod-logs-for-generated-password"

# Demo-specific labels (applied to all resources)
commonLabels:
  environment: "demo"
  purpose: "testing"
  stalwart.io/profile: "tiny"
